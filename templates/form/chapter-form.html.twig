{% extends "base.html.twig" %}

{% block body %}

    <h2>Creation of a Chapter</h2>

{{ form_start(form) }}
    {# render the task's only field: description #}
    {{ form_row(form.title) }}
    {{ form_row(form.type) }}
    {{ form_row(form.textContent1) }}
    <div class="well">
        <h5>Monsters included</h5>
        <ul class="npcs" data-prototype="{{ form_widget(form.npcs.vars.prototype)|e('html_attr') }}">
            {% for npc in form.npcs %}
            <li>{{ form_row(npc) }}</li>
            {% endfor %}
        </ul>
    </div>

    <div class="well">
        <h5>Weapons to be picked in chapter</h5>
        <ul class="weapons" data-prototype="{{ form_widget(form.weapons.vars.prototype)|e('html_attr') }}">
            {% for weapon in form.weapons %}
                <li>{{ form_row(weapon) }}</li>
            {% endfor %}
        </ul>
    </div>

    <div class="well">
        <h5>Special items to be picked in chapter</h5>
        <ul class="specialItems" data-prototype="{{ form_widget(form.specialItems.vars.prototype)|e('html_attr') }}">
            {% for specialItem in form.specialItems %}
                <li>{{ form_row(specialItem) }}</li>
            {% endfor %}
        </ul>
    </div>

    <div class="well">
        <h5>Consumable Items to be picked in chapter</h5>
        <ul class="consumableItems" data-prototype="{{ form_widget(form.consumableItems.vars.prototype)|e('html_attr') }}">
            {% for consumableItem in form.consumableItems %}
                <li>{{ form_row(consumableItem) }}</li>
            {% endfor %}
        </ul>
    </div>

    {{ form_row(form.textContent2) }}

    <div class="well">
    <h4>Choices to be made at the end of te chapter</h4>
    <ul class="choices" data-prototype="{{ form_widget(form.choices.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render it #}
        {% for choice in form.choices %}
            <li>{{ form_row(choice) }}</li>
        {% endfor %}
    </ul>

    </div>
{{ form_end(form) }}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        var $choicesHolder;
        var $npcsHolder;
        var $weaponsHolder;
        var $specialItemsHolder;
        var $consumableItemsHolder;

        // setup an "add a choice" link
        var $addChoiceLink = $('<a href="#" class="add_choice_link"><button class="btn btn-primary">Add a choice</button></a>');
        var $newChoiceLinkLi = $('<li></li>').append($addChoiceLink);

        var $addNpcLink = $('<a href="#" class="add_npc_link"><button class="btn btn-warning">Add a npc</button></a>');
        var $newNpcLinkLi = $('<li></li>').append($addNpcLink);

        var $addWeaponLink = $('<a href="#" class="add_weapon_link"><button class="btn btn-success">Add a weapon</button></a>');
        var $newWeaponLinkLi = $("<li></li>").append($addWeaponLink);

        var $addSpecialItemLink = $('<a href="#" class="add_specialItem_link"><button class="btn btn-success">Add a special item</button></a>');
        var $newSpecialItemLinkLi = $("<li></li>").append($addSpecialItemLink);

        var $addConsumableItemLink = $('<a href="#" class="add_consumableItem_link"><button class="btn btn-success">Add a consumable item</button></a>');
        var $newConsumableItemLinkLi = $("<li></li>").append($addConsumableItemLink);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of choices
            $choicesHolder = $('ul.choices');
            $npcsHolder = $('ul.npcs');
            $weaponsHolder = $('ul.weapons');
            $specialItemsHolder = $('ul.specialItems');
            $consumableItemsHolder = $('ul.consumableItems');

            // add a delete link to all of the existing tag form li elements
            $choicesHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });
            $npcsHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });
            $weaponsHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });
            $specialItemsHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });
            $consumableItemsHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });

            // add the "add a choice" anchor and li to the choices ul
            $choicesHolder.append($newChoiceLinkLi);
            $npcsHolder.append($newNpcLinkLi);
            $weaponsHolder.append($newWeaponLinkLi);
            $specialItemsHolder.append($newSpecialItemLinkLi);
            $consumableItemsHolder.append($newConsumableItemLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $choicesHolder.data('index', $choicesHolder.find(':input').length);
            $npcsHolder.data('index', $npcsHolder.find(':input').length);
            $weaponsHolder.data('index', $weaponsHolder.find(':input').length);
            $specialItemsHolder.data('index', $specialItemsHolder.find(':input').length);
            $consumableItemsHolder.data('index', $consumableItemsHolder.find(':input').length);

            $addChoiceLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see next code block)
                addChildForm($choicesHolder, $newChoiceLinkLi);
            });

            $addNpcLink.on('click', function(e) {
                e.preventDefault();
                addChildForm($npcsHolder, $newNpcLinkLi);
            });

            $addWeaponLink.on('click', function(e) {
                e.preventDefault();
                addChildForm($weaponsHolder, $newWeaponLinkLi);
            });

            $addSpecialItemLink.on('click', function(e) {
                e.preventDefault();
                addChildForm($specialItemsHolder, $newSpecialItemLinkLi);
            });

            $addConsumableItemLink.on('click', function(e) {
                e.preventDefault();
                addChildForm($consumableItemsHolder, $newConsumableItemLinkLi);
            });
        });
        function addChildForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<a href="#"><button class="btn btn-small btn-danger">-</button></a>');
            $tagFormLi.append($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
    </script>

{% endblock %}